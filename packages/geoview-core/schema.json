{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "GeoView Core Config Schema",
  "type": "object",
  "version": 1.0,
  "comments": "Configuration for GeoView core packages, each packages manages it own schema.",
  "additionalProperties": false,

  "definitions": {
    "detailsLayerSettings": {
      "type": "object",
      "properties": {
        "parser": {
          "type": "string",
          "description": "A path to a javascript file with a function for parsing the layers identify output. Only needed if a custom template is being used."
        },
        "template": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "en": {
              "type": "string",
              "description": "A path to an html template (English) that will override default identify output."
            },
            "fr": {
              "type": "string",
              "description": "A path to an html template (French) that will override default identify output."
            }
          }
        }
      },
      "required": ["template"],
      "additionalProperties": false
    },

    "initialLayerSettings": {
      "type": "object",
      "properties": {
        "opacity": {
          "type": "number",
          "default": 1,
          "description": "Initial opacity setting."
        },
        "visibility": {
          "type": "boolean",
          "default": true,
          "description": "Initial visibility setting."
        },
        "boundingBox": {
          "type": "boolean",
          "default": false,
          "description": "Display bounding box."
        },
        "query": {
          "type": "boolean",
          "default": true,
          "description": "Allow querying."
        }
      },
      "additionalProperties": false
    },

    "layerNameNode": {
      "type": "object",
      "properties": {
        "en": {
          "type": "string",
          "description": "The display name of the layer (English). If it is not present the viewer will make an attempt to scrape this information."
        },
        "fr": {
          "type": "string",
          "description": "The display name of the layer (French). If it is not present the viewer will make an attempt to scrape this information."
        }
      }
    },
    "layerUrlNode": {
      "type": "object",
      "properties": {
        "en": {
          "type": "string",
          "description": "The service endpoint of the layer (English). It should match the type provided in layerType."
        },
        "fr": {
          "type": "string",
          "description": "The service endpoint of the layer (French). It should match the type provided in layerType."
        }
      }
    },
    "layerMetadataUrlNode": {
      "type": "object",
      "properties": {
        "en": {
          "type": "string",
          "default": null,
          "description": "The metadata url of the layer service (English)."
        },
        "fr": {
          "type": "string",
          "default": null,
          "description": "The metadata url of the layer service (French)."
        }
      }
    },

    "basicLayer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the layer for referencing within the viewer (does not relate directly to any external service). The id will have the language extension (id-'lang')."
        },
        "name": {
          "$ref": "#/definitions/layerNameNode"
        },
        "url": {
          "$ref": "#/definitions/layerUrlNode"
        },
        "layerType": {
          "type": "string",
          "enum": ["ogcWms", "ogcWfs", "geoJson", "csv", "esriDynamic", "esriFeature", "esriImage", "esriTile"]
        }
      },
      "required": ["id", "layerType", "url"]
    },
    "basicLayerNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the layer for referencing within the viewer (does not relate directly to any external service). The id will have the language extension (id-'lang')."
        },
        "name": {
          "$ref": "#/definitions/layerNameNode"
        },
        "url": {
          "$ref": "#/definitions/layerUrlNode"
        },
        "layerType": {
          "type": "string",
          "enum": ["esriImage", "esriTile"]
        },
        "metadataUrl": {
          "$ref": "#/definitions/layerMetadataUrlNode"
        },
        "state": {
          "$ref": "#/definitions/initialLayerSettings"
        },
        "details": {
          "$ref": "#/definitions/detailsLayerSettings"
        }
      },
      "required": ["id", "layerType", "url"],
      "additionalProperties": false
    },
    "featureLayerNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the layer for referencing within the viewer (does not relate directly to any external service). The id will have the language extension (id-'lang')."
        },
        "name": {
          "$ref": "#/definitions/layerNameNode"
        },
        "url": {
          "$ref": "#/definitions/layerUrlNode"
        },
        "layerType": {
          "type": "string",
          "enum": ["esriFeature"]
        },
        "metadataUrl": {
          "$ref": "#/definitions/layerMetadataUrlNode"
        },
        "nameField": {
          "type": "string",
          "description": "The display field of the layer. If it is not present the viewer will make an attempt to scrape this information."
        },
        "tooltipField": {
          "type": "string",
          "description": "The field to be used for tooltips. If it is not present the viewer will use nameField (if provided)."
        },
        "outfields": {
          "type": "string",
          "default": "*",
          "description": "A comma separated list of attribute names that should be requested on query."
        },
        "state": {
          "$ref": "#/definitions/initialLayerSettings"
        },
        "details": {
          "$ref": "#/definitions/detailsLayerSettings"
        }
      },
      "required": ["id", "layerType", "url"],
      "additionalProperties": false
    },
    "dynamicLayerNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the layer for referencing within the viewer (does not relate directly to any external service). The id will have the language extension (id-'lang')."
        },
        "name": {
          "$ref": "#/definitions/layerNameNode"
        },
        "url": {
          "$ref": "#/definitions/layerUrlNode"
        },
        "layerType": {
          "type": "string",
          "enum": ["esriDynamic"]
        },
        "metadataUrl": {
          "$ref": "#/definitions/layerMetadataUrlNode"
        },
        "layerEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dynamicLayerEntryNode"
          },
          "minItems": 1
        },
        "state": {
          "$ref": "#/definitions/initialLayerSettings"
        },
        "details": {
          "$ref": "#/definitions/detailsLayerSettings"
        }
      },
      "required": ["id", "layerType", "layerEntries", "url"],
      "additionalProperties": false
    },
    "dynamicLayerEntryNode": {
      "type": "object",
      "properties": {
        "index": {
          "type": "number",
          "description": "The index of the layer in the map service."
        },
        "name": {
          "$ref": "#/definitions/layerNameNode"
        },
        "nameField": {
          "type": "string",
          "description": "The display field of the layer.  If it is not present the viewer will make an attempt to scrape this information."
        },
        "outfields": {
          "type": "string",
          "default": "*",
          "description": "A comma separated list of attribute names that should be requested on query."
        },
        "state": {
          "$ref": "#/definitions/initialLayerSettings"
        }
      },
      "required": ["index"],
      "additionalProperties": false
    },
    "geoJsonLayerNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the layer for referencing within the viewer (does not relate directly to any external service). The id will have the language extension (id-'lang')."
        },
        "name": {
          "$ref": "#/definitions/layerNameNode"
        },
        "url": {
          "$ref": "#/definitions/layerUrlNode"
        },
        "layerType": {
          "type": "string",
          "enum": ["geojson"]
        },
        "nameField": {
          "type": "string",
          "description": "The display field of the layer. If it is not present the viewer will make an attempt to find the first valid field."
        },
        "tooltipField": {
          "type": "string",
          "description": "The field to be used for tooltips.  If it is not present the viewer will use nameField (if provided)."
        },
        "renderer": {
          "type": "object",
          "additionalProperties": true,
          "description": "Optional renderer object to apply to the layer. Follows Leaflet Path json convention."
        },
        "state": {
          "$ref": "#/definitions/initialLayerSettings"
        },
        "details": {
          "$ref": "#/definitions/detailsLayerSettings"
        }
      },
      "required": ["id", "name", "layerType", "url"],
      "additionalProperties": false
    },
    "wfsLayerNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the layer for referencing within the viewer (does not relate directly to any external service). The id will have the language extension (id-'lang')."
        },
        "name": {
          "$ref": "#/definitions/layerNameNode"
        },
        "url": {
          "$ref": "#/definitions/layerUrlNode"
        },
        "layerEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wfsLayerEntryNode"
          },
          "minItems": 1
        },
        "layerType": {
          "type": "string",
          "enum": ["ogcWfs"]
        },
        "nameField": {
          "type": "string",
          "description": "The display field of the layer. If it is not present the viewer will make an attempt to scrape this information."
        },
        "tooltipField": {
          "type": "string",
          "description": "The field to be used for tooltips.  If it is not present the viewer will use nameField (if provided)."
        },
        "renderer": {
          "type": "object",
          "additionalProperties": true,
          "description": "Optional renderer object to apply to the layer. Follows Leaflet Path json convention."
        },
        "state": {
          "$ref": "#/definitions/initialLayerSettings"
        },
        "details": {
          "$ref": "#/definitions/detailsLayerSettings"
        }
      },
      "required": ["id", "layerType", "layerEntries", "url"],
      "additionalProperties": false
    },
    "wfsLayerEntryNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the layer entry in the WFS."
        },
        "name": {
          "$ref": "#/definitions/layerNameNode"
        },
        "state": {
          "$ref": "#/definitions/initialLayerSettings"
        }
      },
      "required": ["id"],
      "additionalProperties": false
    },
    "wmsLayerNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the layer for referencing within the viewer (does not relate directly to any external service). The id will have the language extension (id-'lang')."
        },
        "name": {
          "$ref": "#/definitions/layerNameNode"
        },
        "url": {
          "$ref": "#/definitions/layerUrlNode"
        },
        "layerEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wmsLayerEntryNode"
          },
          "minItems": 1
        },
        "layerType": {
          "type": "string",
          "enum": ["ogcWms"]
        },
        "metadataUrl": {
          "$ref": "#/definitions/layerMetadataUrlNode"
        },
        "state": {
          "$ref": "#/definitions/initialLayerSettings"
        },
        "details": {
          "$ref": "#/definitions/detailsLayerSettings"
        }
      },
      "required": ["id", "layerType", "layerEntries", "url"],
      "additionalProperties": false
    },
    "wmsLayerEntryNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the layer entry in the WMS."
        },
        "name": {
          "$ref": "#/definitions/layerNameNode"
        },
        "state": {
          "$ref": "#/definitions/initialLayerSettings"
        }
      },
      "required": ["id"],
      "additionalProperties": false
    },
    "geometryEndpointLayerNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the layer for referencing within the viewer (does not relate directly to any external service). The id will have the language extension (id-'lang')."
        },
        "name": {
          "$ref": "#/definitions/layerNameNode"
        },
        "url": {
          "$ref": "#/definitions/layerUrlNode"
        },
        "layerType": {
          "type": "string",
          "enum": ["geojsonEndpoint"]
        },
        "nameField": {
          "type": "string",
          "description": "The display field of the layer. If it is not present the viewer will make an attempt to find the first valid field."
        },
        "tooltipField": {
          "type": "string",
          "description": "The field to be used for tooltips.  If it is not present the viewer will use nameField (if provided)."
        },
        "renderer": {
          "type": "object",
          "additionalProperties": true,
          "description": "Optional renderer object to apply to the layer. Follows Leaflet Path json convention."
        },
        "state": {
          "$ref": "#/definitions/initialLayerSettings"
        },
        "details": {
          "$ref": "#/definitions/detailsLayerSettings"
        }
      },
      "required": ["id", "name", "layerType", "url"],
      "additionalProperties": false
    },
    "geoCoreLayerNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The GeoCore catalog uuid of the layer. The id will have the language extension (id-'lang')."
        },
        "url": {
          "type": "string",
          "description": "The url path to the geoCore endpoint (optional, this value should be embeded in the GeoView)."
        },
        "layerType": {
          "type": "string",
          "enum": ["geoCore"]
        }
      },
      "required": ["id", "layerType"],
      "additionalProperties": false
    },
    "xyzTilesLayerNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the layer for referencing within the viewer (does not relate directly to any external service). The id will have the language extension (id-'lang')."
        },
        "name": {
          "$ref": "#/definitions/layerNameNode"
        },
        "url": {
          "$ref": "#/definitions/layerUrlNode"
        },
        "layerType": {
          "type": "string",
          "enum": ["xyzTiles"]
        },
        "metadataUrl": {
          "$ref": "#/definitions/layerMetadataUrlNode"
        },
        "nameField": {
          "type": "string",
          "description": "The display field of the layer. If it is not present the viewer will make an attempt to scrape this information."
        },
        "tooltipField": {
          "type": "string",
          "description": "The field to be used for tooltips. If it is not present the viewer will use nameField (if provided)."
        },
        "outfields": {
          "type": "string",
          "default": "*",
          "description": "A comma separated list of attribute names that should be requested on query."
        },
        "state": {
          "$ref": "#/definitions/initialLayerSettings"
        },
        "details": {
          "$ref": "#/definitions/detailsLayerSettings"
        }
      },
      "required": ["id", "layerType", "url"],
      "additionalProperties": false
    },
    "ogcFeatureLayerNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the layer for referencing within the viewer (does not relate directly to any external service). The id will have the language extension (id-'lang')."
        },
        "name": {
          "$ref": "#/definitions/layerNameNode"
        },
        "url": {
          "$ref": "#/definitions/layerUrlNode"
        },
        "layerEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ogcFeatureLayerEntryNode"
          },
          "minItems": 1
        },
        "layerType": {
          "type": "string",
          "enum": ["ogcFeature"]
        },
        "metadataUrl": {
          "$ref": "#/definitions/layerMetadataUrlNode"
        },
        "state": {
          "$ref": "#/definitions/initialLayerSettings"
        },
        "details": {
          "$ref": "#/definitions/detailsLayerSettings"
        }
      },
      "required": ["id", "layerType", "layerEntries", "url"],
      "additionalProperties": false
    },
    "ogcFeatureLayerEntryNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the layer entry in the WMS."
        },
        "name": {
          "$ref": "#/definitions/layerNameNode"
        },
        "state": {
          "$ref": "#/definitions/initialLayerSettings"
        }
      },
      "required": ["id"],
      "additionalProperties": false
    },
    "layerNode": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/basicLayerNode"
        },
        {
          "$ref": "#/definitions/featureLayerNode"
        },
        {
          "$ref": "#/definitions/dynamicLayerNode"
        },
        {
          "$ref": "#/definitions/geoJsonLayerNode"
        },
        {
          "$ref": "#/definitions/wfsLayerNode"
        },
        {
          "$ref": "#/definitions/wmsLayerNode"
        },
        {
          "$ref": "#/definitions/xyzTilesLayerNode"
        },
        {
          "$ref": "#/definitions/ogcFeatureLayerNode"
        },
        {
          "$ref": "#/definitions/geometryEndpointLayerNode"
        },
        {
          "$ref": "#/definitions/geoCoreLayerNode"
        }
      ]
    },

    "layerList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/layerNode"
      },
      "minItems": 0
    }
  },

  "properties": {
    "map": {
      "type": "object",
      "properties": {
        "basemapOptions": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "enum": ["transport", "simple", "osm", "nogeom"],
              "default": "transport",
              "description": "Id of the basemap to use."
            },
            "shaded": {
              "type": "boolean",
              "default": true,
              "description": "Enable or disable shaded basemap (if basemap id is set to shaded then this should be false)."
            },
            "labeled": {
              "type": "boolean",
              "default": true,
              "description": "Enable or disable basemap labels"
            }
          },
          "required": ["id", "shaded", "labeled"]
        },
        "interaction": {
          "type": "string",
          "enum": ["static", "dynamic"],
          "default": "dynamic",
          "description": "If map is dynamic (pan/zoom) or static to act as a thumbnail (no nav bar)."
        },
        "layers": {
          "$ref": "#/definitions/layerList",
          "description": "Layers list in the order which they should be added to the map."
        },
        "view": {
          "type": "object",
          "properties": {
            "center": {
              "type": "array",
              "prefixItems": [
                {
                  "type": "integer",
                  "minimum": -80,
                  "maximum": 80,
                  "default": 60,
                  "description": "Initial latitude value for map center."
                },
                {
                  "type": "integer",
                  "minimum": -160,
                  "maximum": 160,
                  "default": -106,
                  "description": "Initial longitude value for map center."
                }
              ]
            },
            "enableRotation": {
              "type": "boolean",
              "default": true,
              "description": "Enable rotation. If false, a rotation constraint that always sets the rotation to zero is used."
            },
            "extent": {
              "type": "array",
              "prefixItems": [
                {
                  "type": "number"
                },
                {
                  "type": "number"
                },
                {
                  "type": "number"
                },
                {
                  "type": "number"
                }
              ],
              "description": "The extent that constrains the view. Called with [minX, minY, maxX, maxY] extent coordinates."
            },
            "minZoom": {
              "type": "integer",
              "description": "The minimum zoom level used to determine the resolution constraint. If not set, will use default from basemap."
            },
            "maxZoom": {
              "minZoom": {
                "type": "integer",
                "description": "The minimum zoom level used to determine the resolution constraint. If not set, will use default from basemap."
              }
            },
            "projection": {
              "type": "integer",
              "enum": [3978, 3857],
              "default": 3978,
              "description": "Spatial Reference EPSG code supported (https://epsg.io/). We support Web Mercator and Lambert Conical Conform Canada."
            },
            "rotation": {
              "type": "integer",
              "minimum": 0,
              "maximum": 360,
              "default": 0,
              "description": "The initial rotation for the view in degree (positive rotation clockwise, 0 means North). Will be converted to radiant by the viewer."
            },
            "zoom": {
              "type": "integer",
              "minimum": 0,
              "maximum": 28,
              "default": 12,
              "description": "Initial map zoom level. Zoom level are define by the basemap zoom levels."
            }
          },
          "required": ["zoom", "center", "projection"]
        },
        "extraOptions": {
          "type": "object",
          "description": "Additional options used for OpenLayers map options"
        }
      },
      "required": ["basemapOptions", "interaction", "view"]
    },
    "theme": {
      "type": "string",
      "enum": ["dark", "light"],
      "default": "dark",
      "description": "Theme style the viewer."
    },
    "appBar": {
      "type": "object",
      "properties": {
        "about": {
          "type": "object",
          "properties": {
            "en": {
              "type": "string"
            },
            "fr": {
              "type": "string"
            }
          },
          "required": ["en", "fr"],
          "description": "The content of the about section in Markdown format. If empty, it will be ignored. If not, it will create a button on the appbar to open the panel."
        }
      }
    },
    "navBar": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string",
        "enum": ["zoom", "fullscreen", "fullextent"]
      },
      "default": ["zoom", "fullscreen", "fullextent"],
      "description": "Controls availalbe on the navigation bar.",
      "minItems": 0
    },
    "components": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string",
        "enum": ["appbar", "navbar", "overview-map", "north-arrow"]
      },
      "default": ["appbar", "navbar", "overview-map", "north-arrow"],
      "description": "Core components to initialize on viewer load. The schema for those are inside this file.",
      "minItems": 0
    },
    "corePackages": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string",
        "enum": ["basemap-panel", "layers-panel", "details-panel", "geolocator-panel"]
      },
      "default": ["basemap-panel", "layers-panel", "details-panel", "geolocator-panel"],
      "description": "Core packages to initialize on viewer load. The schema for those are on their own package. NOTE: config from packages are in the same loaction as core config (<<core config name>>-<<package name>>.json).",
      "minItems": 0
    },
    "externalPackages": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "External Package name. The name must be ideintical to the window external package object to load."
          },
          "configUrl": {
            "type": "string",
            "description": "The url to the external package configuration setting. The core package will read the configuration and pass it inside the package."
          }
        },
        "required": ["name"]
      },
      "default": [],
      "description": "List of external packages to initialize on viewer load.",
      "minItems": 0
    },
    "serviceUrls": {
      "type": "object",
      "description": "Service endpoint urls",
      "properties": {
        "keys": {
          "type": "string",
          "default": "https://geocore.api.geo.ca",
          "description": "Service end point to access API for layers specification (loading and plugins parameters). By default it is GeoCore but can be another endpoint with similar output."
        },
        "proxyUrl": {
          "type": "string",
          "description": "An optional proxy to be used for dealing with same-origin issues.  URL must either be a relative path on the same server or an absolute path on a server which sets CORS headers."
        }
      }
    },
    "languages": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string",
        "enum": ["en-CA", "fr-CA"]
      },
      "default": ["en-CA", "fr-CA"],
      "description": "ISO 639-1 code indicating the languages supported by the configuration file.",
      "minItems": 1
    },
    "version": {
      "type": "string",
      "enum": ["1.0"],
      "description": "The schema version used to validate the configuration file. The schema should enumerate the list of versions accepted by this version of the viewer."
    }
  },
  "required": ["map", "languages"]
}
