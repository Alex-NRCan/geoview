/*! Package:geoview-basemap-panel: 0.1.0 - "19d9de241edad9c96f65c09df57e94b038ec17a4" - 2023-12-13T19:30:12.852Z */
"use strict";(self.webpackChunkgeoview_core=self.webpackChunkgeoview_core||[]).push([[286],{18111:(e,t,a)=>{var n=a(76014),r=a(84580),o=a(42910),i=a(64188),s=a(16167),p=a(91267),l=a(64057),c=a(21284),d=a(71297),u=a(96021),m=a(77797),b=a(86865),f=a(65922),h=a.n(f),y=a(54582),g=a(29541);function v(e){var t=e.mapId,a=e.config,n=window.cgpv,r=n.api.maps[t],o=n.api,i=n.ui,s=n.react,p=i.elements,l=p.Select,d=p.Card,f=p.Box,v=s.useState,C=s.useEffect,P=function(e){return{basemapCard:{"& .MuiCard-root":{backgroundColor:e.palette.grey.A700,color:e.palette.primary.light,display:"flex",flexDirection:"column",backgroundClip:"padding-box",border:"1px solid rgba(255,255,255,0.25)",borderRadius:"6px",boxShadow:"none",marginBottom:"16px",transition:"all 0.3s ease-in-out","&:last-child":{marginBottom:"0px"}},"& .MuiCardHeader-root":{backgroundColor:"".concat(e.palette.grey.A700," !important"),color:e.basemapPanel.header,fontSize:14,fontWeight:400,margin:0,padding:"0 12px",height:60,width:"100%",order:2},"& .MuiCardContent-root":{order:1,height:190,position:"relative",padding:0,"&:last-child":{padding:0},"& .basemapCardThumbnail":{position:"absolute",height:"100%",width:"100%",objectFit:"cover",top:0,left:0},"& .basemapCardThumbnailOverlay":{display:"block",height:"100%",width:"100%",position:"absolute",backgroundColor:e.basemapPanel.overlayDefault,transition:"all 0.3s ease-in-out"}},"&:hover":{cursor:"pointer",borderColor:e.basemapPanel.borderHover,"& .MuiCardContent-root":{"& .basemapCardThumbnailOverlay":{backgroundColor:e.basemapPanel.overlayHover}}},"&.active":{borderColor:e.basemapPanel.borderActive,"& .MuiCardContent-root":{"& .basemapCardThumbnailOverlay":{backgroundColor:e.basemapPanel.overlayActive}},"&:hover":{borderColor:"rgba(255,255,255,0.75)","& .MuiCardContent-root":{"& .basemapCardThumbnailOverlay":{backgroundColor:"rgba(0,0,0,0)"}}}}}}}(i.useTheme()),j=v([]),I=(0,b.Z)(j,2),w=I[0],x=I[1],B=v(""),Z=(0,b.Z)(B,2),k=Z[0],N=Z[1],A=v(a.canSwichProjection),O=(0,b.Z)(A,1)[0],S=a.supportedProjections.map((function(e){return null==e?void 0:e.projectionCode}))||[],T=v((0,y.oW)()),R=(0,b.Z)(T,2),M=R[0],L=R[1],E=function(e){r.basemap.setBasemap(e),N(e)},q=function(){var e=(0,m.Z)(h().mark((function e(n){var i,s,p,l,d,m;return h().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:i=(0,c.ZQJ)(a.supportedProjections.find((function(e){return e.projectionCode===n}))),s=!1,o.maps[t].basemap.basemaps=[],x([]),p=h().mark((function e(){var a,n;return h().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:a=i.customBasemaps[l],(n=o.maps[t].basemap.createCustomBasemap(a))&&x((function(e){return[].concat((0,u.Z)(e),[n])})),n&&0===l&&""===k&&(E(n.basemapId),s=!0);case 4:case"end":return e.stop()}}),e)})),l=0;case 6:if(!(l<i.customBasemaps.length)){e.next=11;break}return e.delegateYield(p(),"t0",8);case 8:l++,e.next=6;break;case 11:d=h().mark((function e(){var a,r,p;return h().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=i.coreBasemaps[m],e.next=3,o.maps[t].basemap.createCoreBasemap(a,n);case 3:(r=e.sent)&&x((function(e){return[].concat((0,u.Z)(e),[r])})),p="".concat(a.shaded?"shaded":"").concat(a.id).concat(a.labeled?"label":""),r&&p===k&&!s&&(E(k),s=!0);case 7:case"end":return e.stop()}}),e)})),m=0;case 13:if(!(m<i.coreBasemaps.length)){e.next=18;break}return e.delegateYield(d(),"t1",15);case 15:m++,e.next=13;break;case 18:s||E(r.basemap.basemaps[0].basemapId);case 19:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}();return C((function(){q(M)}),[]),(0,g.jsxs)(f,{sx:P.basemapCard,children:[O&&(0,g.jsx)(l,{fullWidth:!0,labelId:"projection-label",value:M,onChange:function(e){var a=e.target.value;E("nogeom"),L(a);var n=r.getView(),i=n.getCenter(),s=n.getProjection().getCode(),p=o.projection.transformPoints([i],s,"EPSG:4326")[0],l=e.target.value,d={zoom:n.getZoom(),minZoom:n.getMinZoom(),maxZoom:n.getMaxZoom(),center:p,projection:l};r.setView(d),q(a),o.event.emit((0,c.ltv)(o.eventNames.MAP.EVENT_MAP_VIEW_PROJECTION_CHANGE,t,a))},label:"Projection",style:{display:a.canSwichProjection?"flex":"none"},inputLabel:{id:"projection-label"},menuItems:S.map((function(e){return{key:e,item:{value:e,children:"EPSG:".concat(e)}}}))}),w.map((function(e){return(0,g.jsx)(d,{tabIndex:0,className:e.basemapId===k?"active":"",onClick:function(){return E(e.basemapId)},onKeyPress:function(){return E(e.basemapId)},title:e.name,contentCard:(0,g.jsxs)(g.Fragment,{children:["string"==typeof e.thumbnailUrl&&(0,g.jsx)("img",{src:e.thumbnailUrl,alt:e.altText,className:"basemapCardThumbnail"}),Array.isArray(e.thumbnailUrl)&&e.thumbnailUrl.map((function(t,a){return(0,g.jsx)("img",{src:t,alt:e.altText,className:"basemapCardThumbnail"},a)})),(0,g.jsx)("div",{className:"basemapCardThumbnailOverlay"})]})},e.basemapId)}))]})}const C=JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema#","title":"GeoView Basemap Panel Schema","type":"object","version":1,"comments":"Configuration for GeoView basemap panel package.","additionalProperties":false,"definitions":{"basemapNameNode":{"type":"object","properties":{"en":{"type":"string"},"fr":{"type":"string"}},"description":"The display name of the layer."},"basemapDescriptionNode":{"type":"object","properties":{"en":{"type":"string"},"fr":{"type":"string"}},"description":"Basemap description."},"thumbnailUrlNode":{"type":"object","properties":{"en":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"fr":{"type":"array","uniqueItems":true,"items":{"type":"string"}}},"description":"Basemap thumbnail urls."},"basemapLayerUrlNode":{"type":"object","properties":{"en":{"type":"string"},"fr":{"type":"string"}},"description":"The service endpoint of the basemap layer."},"basemapAttributionNode":{"type":"object","properties":{"en":{"type":"string"},"fr":{"type":"string"}},"description":"Basemap attribution text."},"basemapLayersNode":{"type":"object","properties":{"basemapId":{"type":"string","description":"the id of the basmap layer."},"url":{"$ref":"#/definitions/basemapLayerUrlNode"},"opacity":{"type":"number","description":"the opacity of this layer.","default":0}},"additionalItems":false,"required":["basemapId","url"]},"basemap":{"type":"object","properties":{"basemapId":{"type":"string","description":"the basemap id","enum":["transport","simple","shaded","osm","nogeom"]},"shaded":{"type":"boolean","description":"if a shaded layer should be included with this basemap.","default":false},"labeled":{"type":"boolean","description":"if labels should be enabled in this basemap.","default":false}},"additionalProperties":false,"required":["basemapId","shaded","labeled"]},"customBasemap":{"type":"object","properties":{"basemapId":{"type":"string","description":"the basemap id."},"name":{"$ref":"#/definitions/basemapNameNode"},"description":{"$ref":"#/definitions/basemapDescriptionNode"},"thumbnailUrl":{"$ref":"#/definitions/thumbnailUrlNode"},"layers":{"type":"array","description":"a list of basemap layers","items":{"$ref":"#/definitions/basemapLayersNode"},"minItems":1},"attribution":{"$ref":"#/definitions/basemapAttributionNode"},"zoomLevels":{"type":"object","description":"Zoom levels for the basemap","properties":{"min":{"type":"integer","minimum":0,"maximum":24,"default":0},"max":{"type":"integer","minimum":0,"maximum":24,"default":24}},"additionalProperties":false,"required":["min","max"]}},"additionalProperties":false,"required":["basemapId","name","description","layers"]}},"properties":{"isOpen":{"type":"boolean","description":"Specifies whether the basemap panel is initially open or closed","default":false},"canSwichProjection":{"type":"boolean","description":"Allow the user to switch projection from the basemap panel.","default":true},"supportedProjections":{"type":"array","items":{"type":"object","properties":{"projectionCode":{"type":"integer","enum":[3978,3857],"description":"Default projection to load on start."},"customBasemaps":{"type":"array","description":"A list of custom basemaps.","items":{"$ref":"#/definitions/customBasemap"},"minItems":0},"coreBasemaps":{"type":"array","description":"A list of basemaps available in the core to show in the panel.","items":{"$ref":"#/definitions/basemap"},"minItems":1}}},"minItems":1,"required":["coreBasemaps","customBasemaps"]},"suportedLanguages":{"type":"array","uniqueItems":true,"items":{"type":"string","enum":["en","fr"]},"default":["en","fr"],"description":"ISO 639-1 code indicating the languages supported by the configuration file.","minItems":1},"version":{"type":"string","enum":["1.0"],"description":"The schema version used to validate the configuration file. The schema should enumerate the list of versions accepted by this version of the viewer."}},"required":["canSwichProjection","supportedProjections","suportedLanguages"]}'),P=JSON.parse('{"isOpen":false,"canSwichProjection":false,"supportedProjections":[{"projectionCode":3978,"coreBasemaps":[{"basemapId":"transport","shaded":true,"labeled":true},{"basemapId":"transport","shaded":true,"labeled":false},{"basemapId":"osm","shaded":true,"labeled":false},{"basemapId":"simple","shaded":true,"labeled":false},{"basemapId":"shaded","shaded":true,"labeled":false},{"basemapId":"nogeom","shaded":false,"labeled":false}],"customBasemaps":[]},{"projectionCode":3857,"coreBasemaps":[{"basemapId":"transport","shaded":true,"labeled":true},{"basemapId":"transport","shaded":true,"labeled":false},{"basemapId":"osm","shaded":true,"labeled":false},{"basemapId":"simple","shaded":true,"labeled":false},{"basemapId":"shaded","shaded":true,"labeled":false},{"basemapId":"nogeom","shaded":false,"labeled":false}],"customBasemaps":[]}],"suportedLanguages":["en","fr"]}');function j(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=(0,p.Z)(e);if(t){var r=(0,p.Z)(this).constructor;a=Reflect.construct(n,arguments,r)}else a=n.apply(this,arguments);return(0,s.Z)(this,a)}}var I=function(e){(0,i.Z)(a,e);var t=j(a);function a(){var e;(0,n.Z)(this,a);for(var r=arguments.length,i=new Array(r),s=0;s<r;s++)i[s]=arguments[s];return e=t.call.apply(t,[this].concat(i)),(0,l.Z)((0,o.Z)(e),"schema",(function(){return C})),(0,l.Z)((0,o.Z)(e),"defaultConfig",(function(){return(0,c.ZQJ)(P)})),(0,l.Z)((0,o.Z)(e),"translations",(0,c.ZQJ)({en:{basemapPanel:"Basemaps"},fr:{basemapPanel:"Fond de carte"}})),(0,l.Z)((0,o.Z)(e),"onCreateContent",(function(){return(0,g.jsx)(v,{mapId:e.pluginProps.mapId,config:e.configObj||{}})})),e}return(0,r.Z)(a,[{key:"onCreateButtonProps",value:function(){var e=window.cgpv.ui.elements.MapIcon;return{id:"basemapPanelButton",tooltip:this.translations[this.displayLanguage()].basemapPanel,tooltipPlacement:"right",children:(0,g.jsx)(e,{}),visible:!0}}},{key:"onCreateContentProps",value:function(){var e;return{title:this.translations[this.displayLanguage()].basemapPanel,icon:'<i class="material-icons">map</i>',width:350,status:null===(e=this.configObj)||void 0===e?void 0:e.isOpen}}},{key:"onRemoved",value:function(){this.api.maps[this.pluginProps.mapId].basemap.basemaps=[],this.api.maps[this.pluginProps.mapId].basemap.loadDefaultBasemaps()}}]),a}(d.k);window.plugins=window.plugins||{},window.plugins["basemap-panel"]=(0,c.RFZ)(I)},71297:(e,t,a)=>{a.d(t,{k:()=>d});var n=a(76014),r=a(84580),o=a(42910),i=a(64188),s=a(16167),p=a(91267),l=a(64057);function c(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,n=(0,p.Z)(e);if(t){var r=(0,p.Z)(this).constructor;a=Reflect.construct(n,arguments,r)}else a=n.apply(this,arguments);return(0,s.Z)(this,a)}}var d=function(e){(0,i.Z)(a,e);var t=c(a);function a(){var e;(0,n.Z)(this,a);for(var r=arguments.length,i=new Array(r),s=0;s<r;s++)i[s]=arguments[s];return e=t.call.apply(t,[this].concat(i)),(0,l.Z)((0,o.Z)(e),"buttonPanel",void 0),e}return(0,r.Z)(a,[{key:"onCreateButtonProps",value:function(){var e=window.cgpv.ui.elements.MapIcon;return{id:"somePluginButton",tooltip:"Some tooltip",tooltipPlacement:"right",children:this.react.createElement(e),visible:!0}}},{key:"onCreateContentProps",value:function(){var e;return{title:"Some title",icon:'<i class="material-icons">map</i>',width:"80vw",status:null===(e=this.configObj)||void 0===e?void 0:e.isOpen}}},{key:"onCreateContent",value:function(){return this.react.createElement("div",void 0,"Content for AppBar Plugin on map id ".concat(this.pluginProps.mapId," goes here..."))}},{key:"onAdd",value:function(){var e,t,a=this.onCreateButtonProps(),n=this.onCreateContentProps();this.buttonPanel=(null===(e=this.map())||void 0===e?void 0:e.appBarButtons.createAppbarPanel(a,n,null))||void 0;var r=this.onCreateContent();null===(t=this.buttonPanel)||void 0===t||null===(t=t.panel)||void 0===t||t.changeContent(r)}},{key:"onRemove",value:function(){var e;this.api&&this.buttonPanel&&(null===(e=this.map())||void 0===e||e.appBarButtons.removeAppbarPanel(this.buttonPanel.buttonPanelId))}}]),a}(a(89498).V)}},e=>{var t;t=18111,e(e.s=t)}]);
//# sourceMappingURL=geoview-basemap-panel.js.map